#!/bin/bash
######chmod u+x this file !!

cat << "EOF"

      _,.
    ,` -.)
   ( _/-\\-._
  /,|`--._,-^|            ,
  \_| |`-._/||          ,'|
    |  `-, / |         /  /
    |     || |        /  /
     `r-._||/   __   /  /   _______ ________  _     _   ____
 __,-<_     )`-/  `./  /   / ___  / \  ___ /  \|   |/  / __ \
'  \   `---'   \   /  /    ``  / /   ||   `   ||   || | <__``
    |           |./  /       _/ /   < |==|    ||   ||  \__ `\
    /           //  /       / /`     ||       ||   ||     `\ |
\_/' \         |/  /       / /___,,  ||___,   \ \_/ / |\___/ /
 |    |   _,^-'/  /       /_______/ /______\   \___/  \_____/
 |    , ``  (\/  /_			       Installer V1.00
  \,.->._    \X-=/^
  (  /   `-._//^`  			     By Maikel Ninaber
   `Y-.____(__}		
    |     {__)		      nl.linkedin.com/in/maikelninaber
          ()

EOF
sleep 2



# Version number of Guacamole to install
GUACVERSION="0.9.14"

# Colors to use for output
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Log Location
LOG="/tmp/guacamole_${GUACVERSION}_build.log"

# Database Name
DB="guacamole_db"

# Check if user is root or sudo
if ! [ $(id -u) = 0 ]; then echo "${RED} Please run this script as sudo or root ${NC}"; exit 1 ; fi

echo ''
echo -e "${BLUE} ZeuS Installation of Guacamole_0.9.14 on Debian Azure !!! ${NC}"
echo -e "${YELLOW} Happy Hacking ! ${NC}"

read -p "Press [Enter] Key To Start"
sleep 1

echo -e  "${YELLOW} Lets configure this setup... ${NC}"
sleep 2

# Get script arguments for non-interactive mode
while [ "$1" != "" ]; do
    case $1 in
       # -m | --mysqlpwd )
        #    shift
         #   mysqlpwd="$1"
          #  ;;
        -l | --lua )
            shift
            lua="$1"
            ;;
        -g | --guacpwd )
            shift
            guacpwd="$1"
            ;;
        -u | --ussh )
            shift
            ussh="$1"
            ;;
        -p | --pssh )
            shift
            pssh="$1"
            ;;
        -u | --ptser )
            shift
            ptser="$1"
            ;;
    esac
    shift
done

# Get MySQL root password and Guacamole User password and SSH Username and ssh password and tightvncserver password
if [ -n "$mysqlpwd" ] && [ -n "$lua" ] && [ -n "$guacpwd" ] && [ -n "$ussh" ] && [ -n "$pssh" ] && [ -n "$ptser" ]; then
        mysqlrootpassword=$mysqlpwd
        guacdbuserpassword=$guacpwd
        guacdbuser=$lua
        userssh=$ussh
        passwssh=$pssh
        passtserv=$ptser
        
else
    echo
    while true
    do
        read -s -p "Enter a MySQL ROOT Password: " mysqlrootpassword
        echo
        read -s -p " Confirm MySQL ROOT Password: " password2
        echo
        
        [ "$mysqlrootpassword" = "$password2" ] && break
        echo -e "${RED} Passwords don't match. Please try again. ${NC}"
        echo
    done
    echo
    while true
    do
        read -s -p "Enter a Guacamole Username: " guacdbuser
        echo
        read -s -p "Confirm Guacamole Username: " password2
        echo
        [ "$guacdbuser" = "$password2" ] && break
        echo -e "${RED} Usernames don't match. Please try again. ${NC}"
        echo
    done
    echo
    while true
    do
        read -s -p "Enter a Guacamole User Database Password: " guacdbuserpassword
        echo
        read -s -p "Confirm Guacamole User Database Password: " password2
        echo
        [ "$guacdbuserpassword" = "$password2" ] && break
        echo -e "${RED} Passwords don't match. Please try again. ${NC}"
        echo
    done
    echo
    while true
    do
        read -s -p "Enter the username off ssh to configure: " userssh
        echo
        read -s -p " Confirm username off ssh to configure: " password2
        echo
        [ "$userssh" = "$password2" ] && break
        echo -e "${RED} Usernames don't match. Please try again. ${NC}"
        echo
    done
    echo 
    while true
    do
        read -s -p "Enter SSH Password: " passwssh
        echo
        read -s -p "Confirm SSH  Password: " password2
        echo
        [ "$passwssh" = "$password2" ] && break
        echo -e "${RED} Passwords don't match. Please try again. ${NC}"
        echo
    done
    echo
    while true
    do
        read -s -p "Enter the password you will use for the vnc server: (will pop up later again) " passtserv
        echo
        read -s -p " Confirm the password you will use for the vnc server: " password2
        echo
        [ "$passtserv" = "$password2" ] && break
        echo -e "${RED} Passwords don't match. Please try again. ${NC}"
        echo
    done
    echo
fi

debconf-set-selections <<< "mysql-server mysql-server/root_password password $mysqlrootpassword"
debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $mysqlrootpassword"

echo -e "${BLUE} #------Downloading------# ${NC}"
sudo apt-get install network-manager -y
sudo apt-get install network-manager-gnome -y
echo -e "${BLUE} [+] Installing XFCE4, this will take a while ${NC}"
apt-get update
apt-get dist-upgrade -y --force-yes
apt-get --yes --force-yes install xorg xrdp
echo -e "${BLUE} [+] Configuring XRDP to listen on port 3390 (but not starting the service)... ${NC}"
sed -i 's/port=3389/port=3390/g' /etc/xrdp/xrdp.ini
sudo apt install xfce4 xfce4-goodies
sudo apt install tightvncserver
sudo apt-get install autoconf -y --force-yes
sudo apt-get install dh-autoreconf -y --force-yes
sudo apt-get install tomcat8 mariadb-server figlet -y
sudo mkdir -p /etc/guacamole/lib /etc/guacamole/extensions
echo -e "${BLUE} #------Starting Database Server------# ${NC}"
sudo service mysql start
##Configure Database------
# SQL code
SQLCODE="
create database ${DB};
create user 'guacamole_user'@'localhost' identified by \"${guacdbuserpassword}\";
GRANT SELECT,INSERT,UPDATE,DELETE ON guacamole_db.* TO 'guacamole_user'@'localhost';
flush privileges;"

echo -e "${BLUE} [+] Executing SQL Code ${NC}"
# Execute SQL code
echo ${SQLCODE} | mysql -u root -p${mysqlrootpassword}

echo -e "${BLUE} [+] Installing plugins for databasesMySQL / MariaDB ${NC}"
##Install the Java database (JDBC) driver for MySQL / MariaDB, link it from the Guacamole configuration: 
sudo apt-get install libmysql-java -y
sudo ln -s /usr/share/java/mysql-connector-java.jar /etc/guacamole/lib

echo -e "${BLUE} [+] Downloading DBC Guacamole authentication components ${NC}"
##Download the JDBC Guacamole authentication component and copy it to the appropriate location
sudo wget -c  https://sourceforge.net/projects/guacamole/files/current/extensions/guacamole-auth-jdbc-0.9.14.tar.gz
sudo tar -xzvf guacamole-auth-jdbc-0.9.14.tar.gz
sudo mv guacamole-auth-jdbc-0.9.14/mysql/guacamole-auth-jdbc-mysql-0.9.14.jar /etc/guacamole/extensions

echo -e "${BLUE} [+] Setting up tables ${NC}"
# Add Guacamole schema to newly created database
echo -e "${BLUE} Adding db tables... ${NC}"
cat guacamole-auth-jdbc-${GUACVERSION}/mysql/schema/*.sql | mysql -u root -p${mysqlrootpassword} ${DB}
if [ $? -ne 0 ]; then
    echo -e "${RED}Failed${NC}"
    exit 1
else
    echo -e "${GREEN}OK${NC}"
fi

echo -e "${BLUE} [+] Additional apps being installed... ${NC}"
##App instalation
sudo apt-get install libcairo2-dev -y
sudo apt-get install libossp-uuid-dev -y
sudo apt-get install libavcodec-dev -y
sudo apt-get install libavutil-dev -y 
sudo apt-get install libswscale-dev -y
sudo apt-get install libfreerdp-dev -y 
sudo apt-get install libpango1.0-dev -y
sudo apt-get install libssh2-1-dev -y
sudo apt-get install libtelnet-dev -y
sudo apt-get install libvncserver-dev -y
sudo apt-get install libpulse-dev -y
sudo apt-get install libssl-dev -y 
sudo apt-get install libvorbis-dev -y 
sudo apt-get install libwebp-dev -y
sudo apt-get install libjpeg62-turbo-dev -y 
sudo apt-get install libpng-dev -y 
sudo apt-get install libpng16-16 -y 
sudo apt-get install git -y

echo -e "${BLUE} [+] Downloading Guacamole Server.... ${NC}"
# Download Guacamole Server
sudo git clone git://github.com/apache/incubator-guacamole-server.git
cd incubator-guacamole-server
echo -e "${BLUE} [+] Configuring Guacamole Server... ${NC}"
sudo autoreconf -fi &>> ${LOG}
sleep 1
sudo ./configure --with-init-dir=/etc/init.d &>> ${LOG}
sleep 1
sudo make && make install &>> ${LOG}
sleep 1
sudo ldconfig 
sudo systemctl enable guacd
sudo /etc/init.d/guacd start
cd ..
echo -e "${BLUE} [+] Guacamole server configurantion finished ${NC}"
##Configuration files ------------------------------------------------------

echo "[+] Configuring Guacamole proxy setings...."
# Hostname and port of guacamole proxy
echo "guacd-hostname: localhost" >> /etc/guacamole/guacamole.properties
echo "guacd-port:    4822" >> /etc/guacamole/guacamole.properties
echo "user-mapping:    /etc/guacamole/user-mapping.xml" >> /etc/guacamole/guacamole.properties
echo "auth-provider:    net.sourceforge.guacamole.net.basic.BasicFileAuthenticationProvider" >> /etc/guacamole/guacamole.properties
echo "basic-user-mapping:    /etc/guacamole/user-mapping.xml" >> /etc/guacamole/guacamole.properties


#If you enable below u have the database already setup for it
# Configure guacamole.propertiesMySQL
#echo "mysql-hostname: localhost" >> /etc/guacamole/guacamole.properties
#echo "mysql-port: 3306" >> /etc/guacamole/guacamole.properties
#echo "mysql-database: ${DB}" >> /etc/guacamole/guacamole.properties
#echo "mysql-username: guacamole_user" >> /etc/guacamole/guacamole.properties
#echo "mysql-password:  >> /etc/guacamole/guacamole.properties


USERGUAC="username= \"${guacdbuser}\""
Passx="password"
Ussx="username"
read PASSGUACMD5conversion trash <<< $( echo -n "${guacdbuserpassword}" | md5sum )
PASSGUAC="password=\"${PASSGUACMD5conversion}\""
USERSSH1="<param name=\"${Ussx}\">${userssh}</param>"
PASSSSH1="<param name=\"${Passx}\">${passwssh}</param>"
PASSTSERV1="<param name=\"${Passx}\">${passtserv}</param>"

echo "<user-mapping>" >> /etc/guacamole/user-mapping.xml
echo "<authorize" >> /etc/guacamole/user-mapping.xml
echo ${USERGUAC} >> /etc/guacamole/user-mapping.xml
echo ${PASSGUAC} >> /etc/guacamole/user-mapping.xml
echo 'encoding="md5">' >> /etc/guacamole/user-mapping.xml
echo '<connection name="Debian_SSH">' >> /etc/guacamole/user-mapping.xml
echo "<protocol>ssh</protocol>" >> /etc/guacamole/user-mapping.xml
echo '<param name="hostname">localhost</param>' >> /etc/guacamole/user-mapping.xml
echo '<param name="port">22</param>' >> /etc/guacamole/user-mapping.xml
echo ${USERSSH1} >> /etc/guacamole/user-mapping.xml
echo ${PASSSSH1} >> /etc/guacamole/user-mapping.xml
echo "</connection>" >> /etc/guacamole/user-mapping.xml
echo '<connection name="Debian_VNC">' >> /etc/guacamole/user-mapping.xml
echo "<protocol>vnc</protocol>" >> /etc/guacamole/user-mapping.xml
echo '<param name="hostname">localhost</param>' >> /etc/guacamole/user-mapping.xml
echo '<param name="port">5901</param>' >> /etc/guacamole/user-mapping.xml
echo ${PASSTSERV1} >> /etc/guacamole/user-mapping.xml
echo "</connection>" >> /etc/guacamole/user-mapping.xml
echo "</authorize>" >> /etc/guacamole/user-mapping.xml
echo "</user-mapping> ">> /etc/guacamole/user-mapping.xml

##End of Configuration files ------------------------------------------------------

#Give mapping wright permissions
sudo chmod 600 /etc/guacamole/user-mapping.xml
chown tomcat8:tomcat8 /etc/guacamole/user-mapping.xml

#Link the guacamole.properties file to your Tomcat setup: 
sudo ln -s /etc/guacamole/ /var/lib/tomcat8/.guacamole
ln -s /etc/guacamole/guacamole.properties /usr/share/tomcat8/.guacamole

# Download Guacamole Client
##Get the guacamole webapp
sudo wget https://sourceforge.net/projects/guacamole/files/current/binary/guacamole-0.9.14.war

#Copy it to Tomcat for deployment and restart Tomcat: 
sudo mv guacamole-0.9.14.war /var/lib/tomcat8/webapps/guacamole.war

echo -e "${RED}[+] restarting TomCat.... ${NC}"
sudo service tomcat8 restart

#Kick off VNC and xfce4
echo "startxfce4 &" >> ~/.vnc/xstartup
sudo vncserver -geometry 1280x720 
echo "figlet MaikelSec" >> /root/.bashrc

#Change tomcat8 port to 80
sed -i -e 's/port="8080"/port="80"/g' /var/lib/tomcat8/conf/server.xml
sudo service tomcat8 restart

#These scripts will run at startup
sudo echo "vncserver -geometry 1280x720" >> /etc/init.d/myscript.sh
sudo echo "service tomcat8 start" >> /etc/init.d/myscript.sh
sudo chmod 755 /etc/init.d/myscript.sh
sudo update-rc.d myscript.sh defaults

echo -e "${GREEN}#------FINISHED------#${NC}"


exit







